package digo

import (
	"github.com/bwmarrin/snowflake"
	"time"
)

// GuildChannel represents an isolated set of users and messages
// within a Guild.
type GuildChannel struct {
	ID                   snowflake.ID `json:"id"`
	GuildID              snowflake.ID `json:"guild_id"`
	Name                 string `json:"name"`
	Type                 string `json:"type"`
	Position             int `json:"position"`
	IsPrivate            bool `json:"is_private"`
	PermissionOverwrites []*Overwrite `json:"permission_overwrites"`
	Topic                string `json:"topic"`
	LastMessageID        snowflake.ID `json:"last_message_id"`
	Bitrate              int `json:"bitrate"`
	UserLimit            int `json:"user_limit"`
}

// DMChannel represent a one-to-one conversation between two users,
// outside of the scope of guilds.
// It could be merged with GuildChannel into a single Channel struct
// like DiscordGo but that does not match the semantics of the Discord API.
type DMChannel struct {
	ID            snowflake.ID
	IsPrivate     bool
	Recipient     *User
	LastMessageID snowflake.ID
}

// Message represents a message sent in a channel within Discord.
// The author object follows the structure of the user object, but
// is only a valid user in the case where the message is generated
// by a user or bot user. If the message is generated by a webhook,
// the author object corresponds to the webhook's id, username, and avatar.
// You can tell if a message is generated by a webhook by checking for the
// webhook_id on the message object.
type Message struct {
	ID              snowflake.ID
	ChannelID       snowflake.ID
	Author          *User
	Content         string
	Timestamp       *time.Time
	EditedTimestamp *time.Time // nullable
	TTS             bool
	MentionEveryone bool
	Mentions        []*User
	MentionRoles    []snowflake.ID
	Attachments     []*Attachment
	Embeds          []*Embed
	Reactions       []*Reaction
	Nonce           snowflake.ID
	Pinned          bool
	WebhookID       string
}

type Reaction struct {
	Count int
	Me    bool
	Emoji *ReactionEmoji
}

type ReactionEmoji struct {
	ID   *snowflake.ID // nullable
	Name string
}

type Overwrite struct {
	ID    snowflake.ID
	Type  string
	Allow int
	Deny  int
}

type Embed struct {
	Title       string
	Type        string
	Description string
	URL         string
	Timestamp   time.Time
	Color       int
	Footer      *EmbedFooter
	Image       *EmbedImage
	Thumbnail   *EmbedThumbnail
	Video       *EmbedVideo
	Provider    *EmbedProvider
	Author      *EmbedAuthor
	Fields      []*EmbedField
}

type EmbedThumbnail struct {
	URL      string
	ProxyURL string
	Height   int
	Width    int
}

type EmbedVideo struct {
	URL    string
	Height int
	Width  int
}

type EmbedImage struct {
	URL      string
	ProxyURL string
	Height   int
	Width    int
}

type EmbedProvider struct {
	Name string
	URL  string
}

type EmbedAuthor struct {
	Name         string
	URL          string
	IconURL      string
	ProxyIconURL string
}

type EmbedFooter struct {
	Text         string
	IconURL      string
	ProxyIconURL string
}

type EmbedField struct {
	Name   string
	Value  string
	Inline bool
}

type Attachment struct {
	ID       snowflake.ID
	Filename string
	Size     int
	URL      string
	ProxyURL string
	Height   int
	Width    int
}

// TODO create mention method on User, Channel, Role and Custom ReactionEmoji structs
// https://discordapp.com/developers/docs/resources/channel#message-formatting
